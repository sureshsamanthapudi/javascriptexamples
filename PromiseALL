var asyncOperation = function(timeout) {
  return new Promise((resolve,reject) => {
   setTimeout(function() {
     if(timeout === 2000){
       reject(timeout)
     } else {
       resolve(timeout)
     }
   },timeout)
  })
}
var promises = [asyncOperation(1000),asyncOperation(2000),asyncOperation(3000)]
var PromiseList = function(promiseList) {
    var completedPromises = 0;
    var rejectedPromises = 0;
    var result = []
  return new Promise( (resolve,reject) => {
        promiseList.forEach( (promise,index) => {
            promise.then( value => {
              result[index]=value
              completedPromises++;
               if(completedPromises === promiseList.length || completedPromises+rejectedPromises === promiseList.length){
                    resolve(result)
               }
            })
            .catch( value => {
              console.log("promise rejected")
              rejectedPromises ++
            })
        })
  })
}
PromiseList(promises).then(value => console.log("values",value));
